name: dbg

on:
  workflow_dispatch:

jobs:

  first:
    name: download
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest']
    runs-on: ${{ matrix.os }}
    steps:

      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Create $HOME/asr_data directory with embedding file in it (Linux)
        shell: bash
        run: |
          mkdir $HOME/asr_data
          cd $HOME/asr_data
          echo "contents" > fasttext.cc.en.300.vec
          # curl https://dl.fbaipublicfiles.com/fasttext/vectors-crawl/cc.en.300.vec.gz -o fasttext.cc.en.300.vec.gz
          # gunzip fasttext.cc.en.300.vec.gz

      - if: ${{ matrix.os == 'macos-latest' }}
        name: Create $HOME/asr_data directory with embedding file in it (Mac)
        shell: bash
        run: |
          mkdir $HOME/asr_data
          cd $HOME/asr_data
          echo "contents" > fasttext.cc.en.300.vec
          # curl https://dl.fbaipublicfiles.com/fasttext/vectors-crawl/cc.en.300.vec.gz -o fasttext.cc.en.300.vec.gz
          # gunzip fasttext.cc.en.300.vec.gz

      - if: ${{ matrix.os == 'windows-latest' }}
        name: Create $env:USERPROFILE\asr_data directory with embedding file in it (Windows)
        shell: pwsh
        run: |
          echo "The operating system on the runner is $env:RUNNER_OS."
          echo "The user profile is $env:USERPROFILE."
          New-Item -Path "$env:USERPROFILE" -Name "asr_data" -ItemType "directory"
          cd $env:USERPROFILE\asr_data
          echo "contents" > fasttext.cc.en.300.vec
          # curl https://dl.fbaipublicfiles.com/fasttext/vectors-crawl/cc.en.300.vec.gz -o fasttext.cc.en.300.vec.gz
          # gunzip fasttext.cc.en.300.vec.gz

      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Commit embedding data to cache (Linux)
        uses: actions/cache@v3.3.2
        with:
          path: $HOME/asr_data/fasttext.cc.en.300.vec
          key: thekey-${{ matrix.os }}

      - if: ${{ matrix.os == 'macos-latest' }}
        name: Commit embedding data to cache (Mac)
        uses: actions/cache@v3.3.2
        with:
          path: $HOME/asr_data/fasttext.cc.en.300.vec
          key: thekey-${{ matrix.os }}

      - if: ${{ matrix.os == 'windows-latest' }}
        name: Commit embedding data to cache (Windows)
        uses: actions/cache@v3.3.2
        with:
          path: $env.USERPROFILE\asr_data\fasttext.cc.en.300.vec
          key: thekey-${{ matrix.os }}

  second:
    name: show
    needs: first
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest']    
    runs-on: ${{ matrix.os }}
    steps:
    
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Retrieve embedding data from cache (Linux)
        uses: actions/cache@v3.3.2
        with:
          path: $HOME/asr_data/fasttext.cc.en.300.vec
          key: thekey-${{ matrix.os }}

      - if: ${{ matrix.os == 'macos-latest' }}
        name: Retrieve embedding data from cache (Mac)
        uses: actions/cache@v3.3.2
        with:
          path: $HOME/asr_data/fasttext.cc.en.300.vec
          key: thekey-${{ matrix.os }}

      - if: ${{ matrix.os == 'windows-latest' }}
        name: Retrieve embedding data from cache (Windows)
        uses: actions/cache@v3.3.2
        with:
          path: $env:USERPROFILE\asr_data\fasttext.cc.en.300.vec
          key: thekey-${{ matrix.os }}

      - if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          stat $HOME/asr_data/fasttext.cc.en.300.vec

      - if: ${{ matrix.os == 'macos-latest' }}
        shell: bash
        run: |
          stat $HOME/asr_data/fasttext.cc.en.300.vec

      - if: ${{ matrix.os == 'windows-latest' }}
        shell: cmd
        run: |
          dir $env:USERPROFILE\asr_data
